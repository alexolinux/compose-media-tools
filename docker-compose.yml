services:
  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION:-latest}
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    networks:
      - xlocal
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - data_portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
  
  jellyfin:
    image: jellyfin/jellyfin:${JELLYFIN_VERSION:-latest}
    container_name: jellyfin
    hostname: jellyfin
    restart: unless-stopped
    networks:
      - xlocal
    ports:
      - "8096:8096"
      - "8920:8920"
    volumes:
      - ${CONFIG}/jellyfin:/config
      - ${HOME}/.cache/jellyfin:/cache
      - type: bind
        source: ${DATA_MEDIA}
        target: /media
        bind:
          propagation: shared
    environment:
      - TZ=${TZ}
      - PUID=${HOST_UID}
      - PGID=${HOST_GID}

  komga:
    image: gotson/komga:${KOMGA_VERSION:-latest}
    container_name: komga
    hostname: komga
    restart: unless-stopped
    networks:
      - xlocal
    ports:
      - "25600:25600"
    volumes:
      - ${CONFIG}/komga:/config
      - ${BACKUP}/books/novels:/data/novels
      - ${BACKUP}/books/tech:/data/tech
      - ${BACKUP}/books/comics:/data/comics
      - ${BACKUP}/books/manga:/data/manga

    user: "${HOST_UID}:${HOST_GID}"
    environment:
      - TZ=${TZ}
      - PUID=${HOST_UID}
      - PGID=${HOST_GID}

  mysql:
    image: mariadb:${MARIADB_VERSION:-latest}
    container_name: mysql
    hostname: mysql
    restart: unless-stopped
    networks:
      - xlocal
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MARIADB_AUTO_UPGRADE=1
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - data_mysql:/var/lib/mysql
    # Security Best Practice:  Consider *not* exposing the MariaDB port.  Nextcloud
    # communicates with it via the Docker network.  No ports section here.
    # ports:
    #   - "3306:3306" #  DO NOT UNCOMMENT THIS LINE UNLESS YOU HAVE A SPECIFIC REASON

  redis:
    image: redis:${REDIS_VERSION:-latest}
    container_name: redis
    hostname: redis
    restart: unless-stopped
    networks:
      - xlocal
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data_redis:/data
  #https://github.com/nextcloud/docker

  nextcloud:
    image: nextcloud:${NEXTCLOUD_VERSION:-latest}
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped
    networks:
      - xlocal
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - /cloud/data:/var/www/html/data
      - nextcloud_html:/var/www/html
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS="${NEXTCLOUD_TRUSTED_DOMAINS}"
      - TRUSTED_PROXIES="${NEXTCLOUD_TRUSTED_PROXIES}"
      - NEXTCLOUD_MAX_UPLOAD_SIZE=16G
      - NEXTCLOUD_OVERWRITE_WEBROOT=/nextcloud
      - NEXTCLOUD_ENABLE_MAIL=false
      - PHP_UPLOAD_LIMIT=16G
      - PHP_MEMORY_LIMIT=512M

# Network
networks:
  xlocal:
    driver: bridge

# Volumes
volumes:
  data_portainer:
    external: true
  data_mysql:
    external: true
  data_redis:
    external: true
  nextcloud_html: {}
